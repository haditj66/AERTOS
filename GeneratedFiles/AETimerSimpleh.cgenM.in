##Macro1 
##Macro2  
##Macro3  
##Macro4
##Macro5
##Macro6
##Macro7
##Macro8
##Macro9
##Macro10
##LoopIncrement1 
##LoopIncrement2 
##LoopIncrement3 
##LoopIncrement4 
##LoopIncrement5 
##LoopIncrement6
##LoopIncrement7
##LoopIncrement8
##LoopIncrement9
##LoopIncrement10

##ToFile @_arg_OUTPUT_FILE_NAME@.@_arg_OUTPUT_FILE_EXTENSION@

#pragma once


//includes
##UserCode_a

#ifndef RTOS_USED__FREERTOS
typedef  TimerHandle_t uint8_t;
typedef void (*TimerSimpleCallback_t)( TimerHandle_t xTimer );
#else
typedef TimerCallbackFunction_t TimerSimpleCallback_t;
#endif



class AETimerSimple
{
public:
    AETimerSimple(uint32_t periodOfTimerTicksInMilli, bool autoReload,TimerSimpleCallback_t timerSimpleCallback);
	
	void StartTimer();
    void StopTimer();
    void PauseTimer();
    bool IsTimerActive();
    void ChangePeriod(uint32_t newPeriod);
    uint32_t GetPeriodOfTimer() const;

	##UserCode_c


private:
    TimerSimpleCallback_t TimerSimpleCallback;
	uint32_t PeriodOfTimerTicksInMilli;
	bool AutoReload;



    ##UserCode_d
};

##UserCode_e
